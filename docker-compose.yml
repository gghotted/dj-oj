version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=".conf"
      - SERVER_NAME=${NGINX_SERVER_NAME}
    volumes:
      - ./nginx:/etc/nginx/conf.d/
      - ./dj_oj/staticfiles:/staticfiles
    depends_on:
      - web
  
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    command: bash -c "service cron start && cd dj_oj && ./entrypoint.sh"
    volumes:
      - ./dj_oj:/dj_oj
      - /var/run/docker.sock:/var/run/docker.sock # local에서는 지우고
    depends_on:
      - postgres
      - redis
  
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"